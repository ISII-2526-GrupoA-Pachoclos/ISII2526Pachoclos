// <auto-generated />
using System;
using AppForSEII2526.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppForSEII2526.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppForSEII2526.API.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("correoElectronico")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("apellidoCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("correoElectronico")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("direccionEnvio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("fechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<int>("metodopago")
                        .HasColumnType("int");

                    b.Property<string>("nombreCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("precioTotal")
                        .HasColumnType("real");

                    b.Property<string>("telefono")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("Id");

                    b.ToTable("Compra");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.ComprarItem", b =>
                {
                    b.Property<int>("idCompra")
                        .HasColumnType("int");

                    b.Property<int>("idHerramienta")
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("compraId")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("herramientaid")
                        .HasColumnType("int");

                    b.Property<float>("precio")
                        .HasColumnType("real");

                    b.HasKey("idCompra", "idHerramienta");

                    b.HasIndex("compraId");

                    b.HasIndex("herramientaid");

                    b.ToTable("ComprarItem");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Herramienta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("fabricanteid")
                        .HasColumnType("int");

                    b.Property<string>("material")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("precio")
                        .HasColumnType("real");

                    b.Property<string>("tiempoReparacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("fabricanteid");

                    b.ToTable("Herramienta");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Oferta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("fechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaOferta")
                        .HasColumnType("datetime2");

                    b.Property<int>("metodoPago")
                        .HasColumnType("int");

                    b.Property<int?>("paraSocio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Oferta");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.OfertaItem", b =>
                {
                    b.Property<int>("idOferta")
                        .HasColumnType("int");

                    b.Property<int>("idHerramienta")
                        .HasColumnType("int");

                    b.Property<int>("herramientaid")
                        .HasColumnType("int");

                    b.Property<int>("ofertaId")
                        .HasColumnType("int");

                    b.Property<int>("porcentaje")
                        .HasColumnType("int");

                    b.Property<float>("precioFinal")
                        .HasColumnType("real");

                    b.HasKey("idOferta", "idHerramienta");

                    b.HasIndex("herramientaid");

                    b.HasIndex("ofertaId");

                    b.ToTable("OfertaItem");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Reparacion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("apellidoCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("fechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaRecogida")
                        .HasColumnType("datetime2");

                    b.Property<int>("metodoPago")
                        .HasColumnType("int");

                    b.Property<string>("nombreCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("numTelefono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("precioTotal")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.ToTable("Reparacion");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.ReparacionItem", b =>
                {
                    b.Property<int>("idHerramienta")
                        .HasColumnType("int");

                    b.Property<int>("idReparacion")
                        .HasColumnType("int");

                    b.Property<int>("Herramientaid")
                        .HasColumnType("int");

                    b.Property<int>("Reparacionid")
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("precio")
                        .HasColumnType("real");

                    b.HasKey("idHerramienta", "idReparacion");

                    b.HasIndex("Herramientaid");

                    b.HasIndex("Reparacionid");

                    b.ToTable("ReparacionItem");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.alquilar", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("apellidoCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("correoElectronico")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("direccionEnvio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("fechaAlquiler")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("metodoPago")
                        .HasColumnType("int");

                    b.Property<string>("nombreCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("precioTotal")
                        .HasMaxLength(30)
                        .HasColumnType("real");

                    b.Property<string>("telefono")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("id");

                    b.ToTable("alquilar");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.alquilarItem", b =>
                {
                    b.Property<int>("idAlquiler")
                        .HasColumnType("int");

                    b.Property<int>("idHerramienta")
                        .HasColumnType("int");

                    b.Property<int>("alquilarid")
                        .HasColumnType("int");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("herramientaid")
                        .HasColumnType("int");

                    b.Property<float>("precio")
                        .HasColumnType("real");

                    b.HasKey("idAlquiler", "idHerramienta");

                    b.HasIndex("alquilarid");

                    b.HasIndex("herramientaid");

                    b.ToTable("alquilarItem");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.fabricante", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("fabricante");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.ComprarItem", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.Compra", "compra")
                        .WithMany("CompraItems")
                        .HasForeignKey("compraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppForSEII2526.API.Models.Herramienta", "herramienta")
                        .WithMany("ComprarItems")
                        .HasForeignKey("herramientaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("compra");

                    b.Navigation("herramienta");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Herramienta", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.fabricante", "fabricante")
                        .WithMany("herramientas")
                        .HasForeignKey("fabricanteid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fabricante");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.OfertaItem", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.Herramienta", "herramienta")
                        .WithMany("OfertaItems")
                        .HasForeignKey("herramientaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppForSEII2526.API.Models.Oferta", "oferta")
                        .WithMany("ofertaItems")
                        .HasForeignKey("ofertaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("herramienta");

                    b.Navigation("oferta");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.ReparacionItem", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.Herramienta", "Herramienta")
                        .WithMany("ReparacionItem")
                        .HasForeignKey("Herramientaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppForSEII2526.API.Models.Reparacion", "Reparacion")
                        .WithMany("ReparacionItems")
                        .HasForeignKey("Reparacionid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Herramienta");

                    b.Navigation("Reparacion");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.alquilarItem", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.alquilar", "alquilar")
                        .WithMany("alquilarItems")
                        .HasForeignKey("alquilarid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppForSEII2526.API.Models.Herramienta", "herramienta")
                        .WithMany("alquilarItems")
                        .HasForeignKey("herramientaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("alquilar");

                    b.Navigation("herramienta");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppForSEII2526.API.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AppForSEII2526.API.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Compra", b =>
                {
                    b.Navigation("CompraItems");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Herramienta", b =>
                {
                    b.Navigation("ComprarItems");

                    b.Navigation("OfertaItems");

                    b.Navigation("ReparacionItem");

                    b.Navigation("alquilarItems");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Oferta", b =>
                {
                    b.Navigation("ofertaItems");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.Reparacion", b =>
                {
                    b.Navigation("ReparacionItems");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.alquilar", b =>
                {
                    b.Navigation("alquilarItems");
                });

            modelBuilder.Entity("AppForSEII2526.API.Models.fabricante", b =>
                {
                    b.Navigation("herramientas");
                });
#pragma warning restore 612, 618
        }
    }
}
